version: 0.2

env:
  variables:
    AWS_REGION: "eu-west-2"
    AWS_ACCOUNT_ID: "637423166046"
    ECR_REPO: "my-rag-inference-repo"
    IMAGE_TAG: "v2"

phases:
  install:
    commands:
      - echo "Installing Docker, Curl, and Unzip..."
      - apt-get update
      - apt-get install -y docker.io curl unzip

      # Optional: Remove the OS-provided AWS CLI if itâ€™s interfering
      - which aws && apt-get remove -y awscli || true

      - echo "Downloading and installing AWS CLI v2..."
      # *Pin* a known-later version if you like:
      #   https://docs.aws.amazon.com/cli/latest/userguide/getting-started-version.html
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.30.0.zip" -o "awscliv2.zip"
      - unzip -q awscliv2.zip
      - ./aws/install --update

      # Confirm the newly installed CLI location and version
      - which aws
      - aws --version

  pre_build:
    commands:
      - echo "Logging into OUR ECR repo for push..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - echo "Logging into the Hugging Face DLC ECR for base image pull (account 763104351884)..."
      # Should now work if CLI is truly v2.30+ (or some version supporting --registry-ids):
      - aws ecr get-login-password --region $AWS_REGION --registry-ids 763104351884 | docker login --username AWS --password-stdin 763104351884.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -f rag_deployment/Dockerfile -t rag-inference:$IMAGE_TAG rag_deployment/
      - echo "Tagging image for ECR..."
      - docker tag rag-inference:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
      - echo "Build and push completed!"

